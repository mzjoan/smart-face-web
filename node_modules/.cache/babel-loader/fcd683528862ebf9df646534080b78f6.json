{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Bubbler_container;\n\nimport { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromArray, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\n\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    const value = particleValue + (modeValue - optionsValue) * ratio;\n    return clamp(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    const value = particleValue - (optionsValue - modeValue) * ratio;\n    return clamp(value, modeValue, particleValue);\n  }\n}\n\nexport class Bubbler extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    _Bubbler_container.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Bubbler_container, container, \"f\");\n\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n\n    this.handleClickMode = mode => {\n      if (mode !== \"bubble\") {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      container.bubble.clicking = true;\n    };\n  }\n\n  clear(particle, force) {\n    if (particle.bubble.inRange && !force) {\n      return;\n    }\n\n    delete particle.bubble.div;\n    delete particle.bubble.opacity;\n    delete particle.bubble.radius;\n    delete particle.bubble.color;\n  }\n\n  init() {\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          bubble = container.actualOptions.interactivity.modes.bubble;\n\n    if (!bubble) {\n      return;\n    }\n\n    container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n\n    if (bubble.size !== undefined) {\n      container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n    }\n  }\n\n  async interact() {\n    const options = __classPrivateFieldGet(this, _Bubbler_container, \"f\").actualOptions,\n          events = options.interactivity.events,\n          onHover = events.onHover,\n          onClick = events.onClick,\n          hoverEnabled = onHover.enable,\n          hoverMode = onHover.mode,\n          clickEnabled = onClick.enable,\n          clickMode = onClick.mode,\n          divs = events.onDiv;\n\n    if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n      this.hoverBubble();\n    } else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n      this.clickBubble();\n    } else {\n      divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n    }\n  }\n\n  isEnabled(particle) {\n    var _a;\n\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events,\n          divs = events.onDiv,\n          divBubble = isDivModeEnabled(\"bubble\", divs);\n\n    if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    const clickMode = events.onClick.mode;\n    return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n  }\n\n  loadModeOptions(options) {\n    if (!options.bubble) {\n      options.bubble = new Bubble();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n    }\n  }\n\n  reset(particle) {\n    particle.bubble.inRange = false;\n  }\n\n  clickBubble() {\n    var _a, _b;\n\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          options = container.actualOptions,\n          mouseClickPos = container.interactivity.mouse.clickPosition,\n          bubble = options.interactivity.modes.bubble;\n\n    if (!bubble || !mouseClickPos) {\n      return;\n    }\n\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n\n    const distance = container.retina.bubbleModeDistance;\n\n    if (!distance || distance < 0) {\n      return;\n    }\n\n    const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p));\n\n    for (const particle of query) {\n      if (!container.bubble.clicking) {\n        continue;\n      }\n\n      particle.bubble.inRange = !container.bubble.durationEnd;\n      const pos = particle.getPosition(),\n            distMouse = getDistance(pos, mouseClickPos),\n            timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n      if (timeSpent > bubble.duration) {\n        container.bubble.durationEnd = true;\n      }\n\n      if (timeSpent > bubble.duration * 2) {\n        container.bubble.clicking = false;\n        container.bubble.durationEnd = false;\n      }\n\n      const sizeData = {\n        bubbleObj: {\n          optValue: container.retina.bubbleModeSize,\n          value: particle.bubble.radius\n        },\n        particlesObj: {\n          optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n          value: particle.size.value\n        },\n        type: \"size\"\n      };\n      this.process(particle, distMouse, timeSpent, sizeData);\n      const opacityData = {\n        bubbleObj: {\n          optValue: bubble.opacity,\n          value: particle.bubble.opacity\n        },\n        particlesObj: {\n          optValue: getRangeMax(particle.options.opacity.value),\n          value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n        },\n        type: \"opacity\"\n      };\n      this.process(particle, distMouse, timeSpent, opacityData);\n\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= distance) {\n          this.hoverBubbleColor(particle, distMouse);\n        } else {\n          delete particle.bubble.color;\n        }\n      } else {\n        delete particle.bubble.color;\n      }\n    }\n  }\n\n  hoverBubble() {\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          mousePos = container.interactivity.mouse.position,\n          distance = container.retina.bubbleModeDistance;\n\n    if (!distance || distance < 0 || mousePos === undefined) {\n      return;\n    }\n\n    const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n\n    for (const particle of query) {\n      particle.bubble.inRange = true;\n      const pos = particle.getPosition(),\n            pointDistance = getDistance(pos, mousePos),\n            ratio = 1 - pointDistance / distance;\n\n      if (pointDistance <= distance) {\n        if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n          this.hoverBubbleSize(particle, ratio);\n          this.hoverBubbleOpacity(particle, ratio);\n          this.hoverBubbleColor(particle, ratio);\n        }\n      } else {\n        this.reset(particle);\n      }\n\n      if (container.interactivity.status === mouseLeaveEvent) {\n        this.reset(particle);\n      }\n    }\n  }\n\n  hoverBubbleColor(particle, ratio, divBubble) {\n    const options = __classPrivateFieldGet(this, _Bubbler_container, \"f\").actualOptions;\n\n    const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n\n    if (!bubbleOptions) {\n      return;\n    }\n\n    if (!particle.bubble.finalColor) {\n      const modeColor = bubbleOptions.color;\n\n      if (!modeColor) {\n        return;\n      }\n\n      const bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n      particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n    }\n\n    if (!particle.bubble.finalColor) {\n      return;\n    }\n\n    if (bubbleOptions.mix) {\n      particle.bubble.color = undefined;\n      const pColor = particle.getFillColor();\n      particle.bubble.color = pColor ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;\n    } else {\n      particle.bubble.color = particle.bubble.finalColor;\n    }\n  }\n\n  hoverBubbleOpacity(particle, ratio, divBubble) {\n    var _a, _b, _c, _d;\n\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          options = container.actualOptions,\n          modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n\n    if (!modeOpacity) {\n      return;\n    }\n\n    const optOpacity = particle.options.opacity.value;\n    const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n    const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n\n    if (opacity !== undefined) {\n      particle.bubble.opacity = opacity;\n    }\n  }\n\n  hoverBubbleSize(particle, ratio, divBubble) {\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n    if (modeSize === undefined) {\n      return;\n    }\n\n    const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n    const pSize = particle.size.value;\n    const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n    if (size !== undefined) {\n      particle.bubble.radius = size;\n    }\n  }\n\n  process(particle, distMouse, timeSpent, data) {\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          bubbleParam = data.bubbleObj.optValue,\n          options = container.actualOptions,\n          bubble = options.interactivity.modes.bubble;\n\n    if (!bubble || bubbleParam === undefined) {\n      return;\n    }\n\n    const bubbleDuration = bubble.duration,\n          bubbleDistance = container.retina.bubbleModeDistance,\n          particlesParam = data.particlesObj.optValue,\n          pObjBubble = data.bubbleObj.value,\n          pObj = data.particlesObj.value || 0,\n          type = data.type;\n\n    if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n      return;\n    }\n\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n\n    if (!container.bubble.durationEnd) {\n      if (distMouse <= bubbleDistance) {\n        const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n        if (obj !== bubbleParam) {\n          const value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n          if (type === \"size\") {\n            particle.bubble.radius = value;\n          }\n\n          if (type === \"opacity\") {\n            particle.bubble.opacity = value;\n          }\n        }\n      } else {\n        if (type === \"size\") {\n          delete particle.bubble.radius;\n        }\n\n        if (type === \"opacity\") {\n          delete particle.bubble.opacity;\n        }\n      }\n    } else if (pObjBubble) {\n      if (type === \"size\") {\n        delete particle.bubble.radius;\n      }\n\n      if (type === \"opacity\") {\n        delete particle.bubble.opacity;\n      }\n    }\n  }\n\n  singleSelectorHover(selector, div) {\n    const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"),\n          selectors = document.querySelectorAll(selector),\n          bubble = container.actualOptions.interactivity.modes.bubble;\n\n    if (!bubble || !selectors.length) {\n      return;\n    }\n\n    selectors.forEach(item => {\n      const elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n        x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n      },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n\n      for (const particle of query) {\n        if (!area.contains(particle.getPosition())) {\n          continue;\n        }\n\n        particle.bubble.inRange = true;\n        const divs = bubble.divs;\n        const divBubble = divMode(divs, elem);\n\n        if (!particle.bubble.div || particle.bubble.div !== elem) {\n          this.clear(particle, true);\n          particle.bubble.div = elem;\n        }\n\n        this.hoverBubbleSize(particle, 1, divBubble);\n        this.hoverBubbleOpacity(particle, 1, divBubble);\n        this.hoverBubbleColor(particle, 1, divBubble);\n      }\n    });\n  }\n\n}\n_Bubbler_container = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Bubbler_container","Circle","ExternalInteractorBase","Rectangle","clamp","colorMix","divMode","divModeExecute","getDistance","getRangeMax","isDivModeEnabled","isInArray","itemFromArray","mouseLeaveEvent","mouseMoveEvent","rangeColorToHsl","rgbToHsl","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","Bubbler","constructor","container","bubble","handleClickMode","mode","clicking","clear","particle","force","inRange","div","opacity","radius","color","init","actualOptions","interactivity","modes","retina","bubbleModeDistance","distance","pixelRatio","size","undefined","bubbleModeSize","interact","options","events","onHover","onClick","hoverEnabled","enable","hoverMode","clickEnabled","clickMode","divs","onDiv","hoverBubble","clickBubble","selector","singleSelectorHover","isEnabled","_a","mouse","divBubble","position","clickPosition","loadModeOptions","sources","source","load","reset","_b","mouseClickPos","query","particles","quadTree","queryCircle","p","durationEnd","pos","getPosition","distMouse","timeSpent","Date","getTime","clickTime","duration","sizeData","bubbleObj","optValue","particlesObj","type","process","opacityData","hoverBubbleColor","mousePos","pointDistance","status","hoverBubbleSize","hoverBubbleOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","Array","mix","pColor","getFillColor","_c","_d","modeOpacity","optOpacity","pOpacity","modeSize","optSize","pSize","data","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","obj","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","contains","WeakMap"],"sources":["/Users/mzjoan/Desktop/smartface/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Bubbler_container;\nimport { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromArray, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        _Bubbler_container.set(this, void 0);\n        __classPrivateFieldSet(this, _Bubbler_container, container, \"f\");\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact() {\n        const options = __classPrivateFieldGet(this, _Bubbler_container, \"f\").actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = __classPrivateFieldGet(this, _Bubbler_container, \"f\").actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = __classPrivateFieldGet(this, _Bubbler_container, \"f\"), selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n_Bubbler_container = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}